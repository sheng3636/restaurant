<template>
  <div class="app-container">
    <div class="main-wrapper">
      <div class="main-header">查询</div>
      <div class="main-content">
        <el-form ref="queryParams" :model="queryParams" label-width="80px" label-position="top">
          <el-row>
            <el-col :md="4">
              <el-form-item label="申请" prop="ttt">
                <el-input v-model="queryParams.ttt" aria-placeholder="请输入申请" />
              </el-form-item>
            </el-col>
            <el-col :md="4">
              <el-form-item label="备注" prop="memo">
                <el-input v-model="queryParams.memo" aria-placeholder="请输入备注" />
              </el-form-item>
            </el-col>
            <el-col :md="6">
              <el-form-item class="textLeft param">
                <el-button type="warning" size="mini" @click="queryList('queryParams')">查询</el-button>
                <el-button type="danger" size="mini" @click="resetData('queryParams')">重置</el-button>
              </el-form-item>
            </el-col>
          </el-row>
        </el-form>
      </div>
    </div>
    <div class="main-wrapper">
      <div class="main-header">
        <el-row>
          <el-col :md="6">
            列表
          </el-col>
          <el-col :md="18" class="tableHeadRow">
            <el-button type="primary" size="mini" @click="addTestFn()">新增</el-button>
          </el-col>
        </el-row>
      </div>     
      <div class="main-content">
        <el-table ref="multipleTable" :data="tables" border fit highlight-current-row>
          <el-table-column type="index" width="55" label="序号" align="center" />
          <el-table-column prop="ttt" label="申请"  align="center" sortable />
          <el-table-column prop="memo" label="备注"  align="center" sortable />
          <el-table-column label="操作" width="180" align="center">
            <template slot-scope="scope">
              <el-dropdown>
                <el-button type="success" size="medium">
                  操作<i class="el-icon-arrow-down el-icon--right"></i>
                </el-button>
                <el-dropdown-menu slot="dropdown" v-if="scope.row.accountState!=3">
                  <el-dropdown-item @click.native="editFn(scope.row)">修改</el-dropdown-item>
                  <el-dropdown-item @click.native="deleteFn(scope.row)">删除</el-dropdown-item>
                </el-dropdown-menu>
              </el-dropdown>
            </template>
          </el-table-column>
        </el-table>
        <!--分页-->
        <el-pagination :current-page.sync="currentPage" :page-sizes="[10, 20, 30, 40]" :page-size="pageSize"
          layout="total, sizes, prev, pager, next, jumper" :total="total" @size-change="handelSizeChange"
          @current-change="handelCurrentChange" />
      </div>
    </div>
    <el-dialog :title="title" :visible.sync="formVisit" :close-on-click-modal="false"
      :close-on-press-escape="false" :before-close="closeDialog" @close="closeDialog('form')" width="50%">
      <el-form ref="form" class="dialogBody" :rules="AddEditRules" :model="form" label-width="80px" label-position="top">
        <el-row>
                <el-col :span="12">
                  <el-form-item label="申请String" prop="ttt">
                      <el-input v-model="form.ttt" placeholder="请输入申请" />
                  </el-form-item>
                </el-col>


        </el-row>
        <el-row>
        </el-row>
        <el-row>
              <el-form-item label="备注" prop="memo">
                  <el-input type="textarea" :rows="3"  v-model="form.memo" placeholder="请输入备注" />
              </el-form-item>
        </el-row>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="closeDialog('form')">取 消</el-button>
        <el-button type="primary" @click="onSubmit('form')">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
import { apiGet, apiPost, apiPut, apiDelete } from '@/utils/request.js'
export default {
  data() {
   
    return {
      total: 0, // 模板表格总数
      currentPage: 1, // 模板表格当前页码
      pageSize: 10, // 模板表格整页大小
      queryParams: {
        // 获取模板参数
        page: 1,
        pageSize: 10
      },
      tables: [
     
      ], // 模板表格数据
      formVisit: false, // 是否新增编辑弹窗
      AddEditRules:{
        ttt: [
          { required: true, message: '请输入申请', trigger: 'blur' }
        ],
        memo: [
          { required: true, message: '请输入备注', trigger: 'blur' }
        ]
      },
      form: {
      },
     

      title: '新增模板' ,// 新增编辑详情弹窗标题
     
      operation: '/system/test'
    }
  },
  mounted() {
    this.getList()
  },
  methods: {
    // 获取模板表格
    getList() { 
	   
      apiGet(this,this.operation,this.queryParams).then(res => {
         this.tables = res.data
      });      
 
    },    
    // page变化getList()触动函数
    handelSizeChange(val) {
      this.queryParams.page = val
      this.getList()
    },
    // pageSize变化getList()触动函数
    handelCurrentChange(val) {
      this.queryParams.pageSize = val
      this.getList()
    },
    // 搜索栏查询
    queryList: function(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.getList()
        } else {
          return false
        }
      })
    },
    onSubmit(formName){
      this.$refs[formName].validate(valid => {
        if (valid) {
          if(this.title === '新增模板') {
            apiPost(this,this.operation,this.form).then(res => {
              this.getList()
              this.closeDialog(formName)
            })
          } else if(this.title === '编辑模板'){
            apiPut(this,this.operation,this.form).then(res => {
              this.getList()
              this.closeDialog(formName)
            })
          }
        } else {
          return false
        }
      })
    },
    // 搜索栏重置
    resetData(formName) {
      this.$refs[formName].resetFields()
      this.getList()
    },
    // 打开新增编辑弹窗
    addTestFn(falg) {
      this.title = '新增模板'
      this.formVisit = true
    },
    // 打开修改弹窗
    editFn(row){
      this.form=row
      this.formVisit = true
      this.title = '编辑模板'
    },
    // 删除模板
    deleteFn(row){
      let params={
          id:row.id
      };
      apiDelete(this,this.operation,params).then(res => {
          this.getList()
      });
    },
    // 关闭新增、编辑、变更记录弹窗
    closeDialog(formName) {
      this.$refs[formName].resetFields()
      this.formVisit = false
    },

    
  }
}
</script>